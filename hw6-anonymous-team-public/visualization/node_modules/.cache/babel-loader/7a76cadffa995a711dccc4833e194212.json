{"ast":null,"code":"var _jsxFileName = \"/Users/olivia/Documents/GitHub/hw6-analytics-framework-mickeymiaomiao-house/hw6-anonymous-team-public/visualization/src/plugins/WordCloudPlugin.tsx\";\nimport React from 'react';\nimport './ContactInfoPlugin.css';\nimport ReactWordcloud from 'react-wordcloud';\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css';\nfunction WordCloudPlugin() {\n  var name = \"WordCloud\";\n  return {\n    getName: function getName() {\n      return name;\n    },\n    getContent: function getContent(resume) {\n      var wordCountMap = new Map(Object.entries(resume.wordCount));\n      var array = Array.from(wordCountMap.entries());\n      var words = Array.from(wordCountMap.keys());\n      var freq = Array.from(wordCountMap.values());\n      var data = [];\n      for (var i = 0; i < words.length; i++) {\n        data.push({\n          text: words[i],\n          value: freq[i]\n        });\n      }\n      data.sort(function (d1, d2) {\n        return d2.count - d1.count;\n      });\n      data = data.slice(0, 50);\n      data.sort(function (d1, d2) {\n        if (d1.word < d2.word) {\n          return -1;\n        }\n        return 1;\n      });\n      var callbacks = {\n        // getWordColor: word => word.value > 1 ? \"blue\" : \"red\",\n        onWordClick: console.log,\n        onWordMouseOver: console.log,\n        getWordTooltip: function getWordTooltip(word) {\n          return \"\".concat(word.text, \" (\").concat(word.value, \") [\").concat(word.value > 50 ? \"good\" : \"bad\", \"]\");\n        }\n      };\n      var options = {\n        rotations: 2,\n        rotationAngles: [-90, 0]\n      };\n      var size = [1000, 800];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"WordCloudPlugin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"word-cloud-title-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"word-cloud-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"W O R D\\xA0\\xA0\\xA0C L O U D\")), /*#__PURE__*/React.createElement(ReactWordcloud, {\n        callbacks: callbacks,\n        words: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n}\n\n// function WordCloudPlugin() {\n//   return <ReactWordcloud words={words} />\n// }\n// const WordCloudPlugin = () => {\n//   return (\n//     <div>\n\n//     </div>\n//   );\n// };\nexport default WordCloudPlugin;","map":{"version":3,"names":["React","ReactWordcloud","WordCloudPlugin","name","getName","getContent","resume","wordCountMap","Map","Object","entries","wordCount","array","Array","from","words","keys","freq","values","data","i","length","push","text","value","sort","d1","d2","count","slice","word","callbacks","onWordClick","console","log","onWordMouseOver","getWordTooltip","options","rotations","rotationAngles","size"],"sources":["/Users/olivia/Documents/GitHub/hw6-analytics-framework-mickeymiaomiao-house/hw6-anonymous-team-public/visualization/src/plugins/WordCloudPlugin.tsx"],"sourcesContent":["import React from 'react';\nimport './ContactInfoPlugin.css';\nimport PersonalPagePlugin from '../framework/PersonalPagePlugin';\nimport Resume from '../framework/Resume';\nimport ReactWordcloud, { Word } from 'react-wordcloud';\n\n\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css';\nimport { ObjectType } from 'typescript';\n\nfunction WordCloudPlugin(): PersonalPagePlugin {\n  const name:string = \"WordCloud\"\n  return {\n    getName(): string {\n      return name;\n    },\n\n    getContent(resume: Resume): JSX.Element {\n      const wordCountMap = new Map(Object.entries(resume.wordCount));\n      const array = Array.from(wordCountMap.entries());\n      const words = Array.from(wordCountMap.keys())\n      const freq = Array.from(wordCountMap.values())\n\n      let data: any[] = []\n      for (var i = 0; i < words.length; i++) {\n          data.push({ text: words[i], value: freq[i]})\n      }\n\n      data.sort((d1, d2)=> { return d2.count - d1.count});\n      data = data.slice(0, 50);\n      data.sort((d1, d2)=>{ \n        if (d1.word < d2.word) {\n          return -1\n        }\n        return 1\n      });\n        const callbacks = {\n          // getWordColor: word => word.value > 1 ? \"blue\" : \"red\",\n          onWordClick: console.log,\n          onWordMouseOver: console.log,\n          getWordTooltip: word => `${word.text} (${word.value}) [${word.value > 50 ? \"good\" : \"bad\"}]`,\n        }\n        const options = {\n          rotations: 2,\n          rotationAngles: [-90, 0],\n        };\n        const size = [1000, 800];\n      return (\n        <div className = \"WordCloudPlugin\">\n          <div className = 'word-cloud-title-container'>\n            <p className = 'word-cloud-title'>W O R D&nbsp;&nbsp;&nbsp;C L O U D</p>\n          </div>\n          <ReactWordcloud \n          callbacks={callbacks}\n          words={data} />\n        </div>\n      )\n    }\n  }\n}\n\n// function WordCloudPlugin() {\n//   return <ReactWordcloud words={words} />\n// }\n// const WordCloudPlugin = () => {\n//   return (\n//     <div>\n      \n//     </div>\n//   );\n// };\nexport default WordCloudPlugin;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAGhC,OAAOC,cAAc,MAAgB,iBAAiB;AAGtD,OAAO,yBAAyB;AAChC,OAAO,+BAA+B;AAGtC,SAASC,eAAe,GAAuB;EAC7C,IAAMC,IAAW,GAAG,WAAW;EAC/B,OAAO;IACLC,OAAO,qBAAW;MAChB,OAAOD,IAAI;IACb,CAAC;IAEDE,UAAU,sBAACC,MAAc,EAAe;MACtC,IAAMC,YAAY,GAAG,IAAIC,GAAG,CAACC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAACK,SAAS,CAAC,CAAC;MAC9D,IAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACP,YAAY,CAACG,OAAO,EAAE,CAAC;MAChD,IAAMK,KAAK,GAAGF,KAAK,CAACC,IAAI,CAACP,YAAY,CAACS,IAAI,EAAE,CAAC;MAC7C,IAAMC,IAAI,GAAGJ,KAAK,CAACC,IAAI,CAACP,YAAY,CAACW,MAAM,EAAE,CAAC;MAE9C,IAAIC,IAAW,GAAG,EAAE;MACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QACnCD,IAAI,CAACG,IAAI,CAAC;UAAEC,IAAI,EAAER,KAAK,CAACK,CAAC,CAAC;UAAEI,KAAK,EAAEP,IAAI,CAACG,CAAC;QAAC,CAAC,CAAC;MAChD;MAEAD,IAAI,CAACM,IAAI,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAI;QAAE,OAAOA,EAAE,CAACC,KAAK,GAAGF,EAAE,CAACE,KAAK;MAAA,CAAC,CAAC;MACnDT,IAAI,GAAGA,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACxBV,IAAI,CAACM,IAAI,CAAC,UAACC,EAAE,EAAEC,EAAE,EAAG;QAClB,IAAID,EAAE,CAACI,IAAI,GAAGH,EAAE,CAACG,IAAI,EAAE;UACrB,OAAO,CAAC,CAAC;QACX;QACA,OAAO,CAAC;MACV,CAAC,CAAC;MACA,IAAMC,SAAS,GAAG;QAChB;QACAC,WAAW,EAAEC,OAAO,CAACC,GAAG;QACxBC,eAAe,EAAEF,OAAO,CAACC,GAAG;QAC5BE,cAAc,EAAE,wBAAAN,IAAI;UAAA,iBAAOA,IAAI,CAACP,IAAI,eAAKO,IAAI,CAACN,KAAK,gBAAMM,IAAI,CAACN,KAAK,GAAG,EAAE,GAAG,MAAM,GAAG,KAAK;QAAA;MAC3F,CAAC;MACD,IAAMa,OAAO,GAAG;QACdC,SAAS,EAAE,CAAC;QACZC,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MACzB,CAAC;MACD,IAAMC,IAAI,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;MAC1B,oBACE;QAAK,SAAS,EAAG,iBAAiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChC;QAAK,SAAS,EAAG,4BAA4B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC3C;QAAG,SAAS,EAAG,kBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,kCAAuC,CACpE,eACN,oBAAC,cAAc;QACf,SAAS,EAAET,SAAU;QACrB,KAAK,EAAEZ,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACX;IAEV;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAejB,eAAe"},"metadata":{},"sourceType":"module"}